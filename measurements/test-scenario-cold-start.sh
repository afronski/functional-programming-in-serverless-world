#!/usr/bin/env bash

DIRECTORIES=("dotnet/fsharp" "jvm/clojure" "jvm/scala" "nodejs/clojurescript" "nodejs/bucklescript" "nodejs/purescript" "shims/haskell")

MAX_TRIALS=10

CURL_TIMING="%{time_namelookup},%{time_connect},%{time_appconnect},%{time_pretransfer},%{time_redirect},%{time_starttransfer},%{time_total}"
JSON='{ "message": "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" }'

pushd ../aws 2>&1 >/dev/null

echo "language,platform,trial,time_namelookup,time_connect,time_appconnect,time_pretransfer,time_redirect,time_starttransfer,time_total"

for DIR in "${DIRECTORIES[@]}"; do
  pushd "${DIR}" 2>&1 >/dev/null

  LANGUAGE=`echo "${DIR}" | cut -d'/' -f2`
  PLATFORM=`echo "${DIR}" | cut -d'/' -f1`

  for I in $(seq 1 ${MAX_TRIALS}); do
    RESULT=`sls deploy`
    URL=`echo "${RESULT}" | grep "/dev/echo" | cut -d" " -f5`

    TIMING=`LC_ALL=C curl -w "${CURL_TIMING}" -XPOST -s -o /dev/null -H "Content-Type: application/json" -d "${JSON}" "${URL}"`
    echo "${LANGUAGE},${PLATFORM},${I},${TIMING}"

    sls remove 2>&1 >/dev/null
  done

  popd 2>&1 >/dev/null
done

popd 2>&1 >/dev/null
